{"version":3,"sources":["components/Post/index.jsx","components/Post/style.jsx","components/Comment/container/constants.js","components/Comment/container/actions.js","components/Comment/AddComment/index.jsx","components/Comment/AddComment/style.js","components/Comment/ShowComment/style.js","components/Comment/ShowComment/Comment.jsx","components/Comment/ShowComment/index.jsx","App.jsx","style.jsx","components/Comment/container/reducer.js","redux/reducer.js","components/Comment/container/sagas.js","redux/sagas.js","index.js","redux/configureStore.js"],"names":["withStyles","card","marginTop","title","fontSize","classes","Card","className","CardContent","Typography","variant","component","gutterBottom","ADD_ANSWER_MODE","TOGGLE_COMMENTS","ADD_COMMENT","DELETE_COMMENT","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_ERROR","EDIT_COMMENT_MODE","EDIT_COMMENT_MODE_SUCCESS","EDIT_COMMENT_MODE_ERROR","EDIT_COMMENT","EDIT_COMMENT_SUCCESS","EDIT_COMMENT_ERROR","FETCH_COMMENT_SUCCESS","FETCH_COMMENT_ERROR","FETCH_COMMENT_PENDING","deleteCommentSuccess","data","type","CONSTANTS","deleteCommentError","error","editCommentMode","id","mode","editCommentModeSuccess","editCommentModeError","editCommentSuccess","editCommentError","fetchCommentSuccess","results","fetchCommentError","fetchCommentPending","AddComment","props","state","commentText","isEdit","comment","text","parentId","this","editComment","addComment","setState","e","target","value","isAnswer","isLoading","classNames","root","answerWrapper","commentWrapper","TextareaAutosize","commentInput","rows","rowsMax","aria-label","placeholder","onChange","handleCommentChange","commentBtns","Fab","color","size","commentAdd","onClick","onAddComment","lastBtn","onCloseComment","Component","mapDispatchToProps","connect","comments","width","margin","display","alignItems","resize","fontFamily","fontWeight","lineHeight","padding","boxSizing","justifyContent","marginLeft","styles","btns","showComment","Comment","addAnswerMode","deleteComment","toggleComment","element","isOpen","onToggleComment","showAnswer","expandArrow","onAddAnswerMode","onEditCommentMode","onDeleteComment","RenderComments","map","item","key","length","addAnswer","maxWidth","Grid","container","direction","justify","initialState","combineReducers","action","uuid","watchCommentsSaga","fetchComments","changeCommentsModeAsync","changeCommentsAsync","deleteCommentsAsync","takeEvery","fakeAPICall","Promise","resolve","reject","wait","setTimeout","clearTimeout","defaultComment","Error","put","actions","call","changeComments","changeCommentsMode","deleteComments","reduce","res","select","newComments","rootSaga","all","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","composeWithDevTools","applyMiddleware","runSaga","run","configureStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e960be8.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { styles } from './style';\n\nconst Post = ({ classes }) =>\n  <Card className={classes.card}>\n    <CardContent>\n      <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n        Post\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n        ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n        ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n        reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur\n        sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n        est laborum.\n      </Typography>\n    </CardContent>\n  </Card>\n\nexport default withStyles(styles)(Post);\n","export const styles = () => ({\n  card: {\n    marginTop: 20\n  },\n  title: {\n    fontSize: 25,\n  },\n});\n","export const ADD_ANSWER_MODE = 'ADD_ANSWER_MODE';\n\nexport const TOGGLE_COMMENTS = 'TOGGLE_COMMENTS';\n\n// ADD COMMENT\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\n// DELETE COMMENT\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\nexport const DELETE_COMMENT_ERROR = 'DELETE_COMMENT_ERROR';\n\n// EDIT COMMENT MODE\nexport const EDIT_COMMENT_MODE = 'EDIT_COMMENT_MODE';\nexport const EDIT_COMMENT_MODE_SUCCESS = 'EDIT_COMMENT_MODE_SUCCESS';\nexport const EDIT_COMMENT_MODE_ERROR = 'EDIT_COMMENT_MODE_ERROR';\n\n// EDIT COMMENT\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\nexport const EDIT_COMMENT_SUCCESS = 'EDIT_COMMENT_SUCCESS';\nexport const EDIT_COMMENT_ERROR = 'EDIT_COMMENT_ERROR';\n\n// FETCH COMMENT\nexport const FETCH_COMMENT_SUCCESS = 'FETCH_COMMENT_SUCCESS';\nexport const FETCH_COMMENT_ERROR = 'FETCH_COMMENT_ERROR';\nexport const FETCH_COMMENT_PENDING = 'FETCH_COMMENT_PENDING';\n","import * as CONSTANTS from './constants';\n\n// ADD ANSWER MODE ACTIONS\nexport const addAnswerMode = (id, mode) => ({\n  type: CONSTANTS.ADD_ANSWER_MODE,\n  id,\n  mode\n});\n\n// TOGGLE COMMENTS\nexport const toggleComment = (id) => ({\n  type: CONSTANTS.TOGGLE_COMMENTS,\n  id\n});\n\n// ADD COMMENT ACTIONS\nexport const addComment = (comment, parentId) => ({\n  type: CONSTANTS.ADD_COMMENT,\n  comment,\n  parentId\n});\n\n// DELETE COMMENT ACTIONS\nexport const deleteComment = (id) => ({\n  type: CONSTANTS.DELETE_COMMENT,\n  id\n});\n\nexport const deleteCommentSuccess = (data) => ({\n  type: CONSTANTS.DELETE_COMMENT_SUCCESS,\n  data\n});\n\nexport const deleteCommentError = (error) => ({\n  type: CONSTANTS.DELETE_COMMENT_ERROR,\n  error\n});\n\n// EDIT COMMENT MODE ACTIONS\nexport const editCommentMode = (id, mode) => ({\n  type: CONSTANTS.EDIT_COMMENT_MODE,\n  id,\n  mode\n});\n\nexport const editCommentModeSuccess = (data) => ({\n  type: CONSTANTS.EDIT_COMMENT_MODE_SUCCESS,\n  data\n});\n\nexport const editCommentModeError = (error) => ({\n  type: CONSTANTS.EDIT_COMMENT_MODE_ERROR,\n  error\n});\n\n// EDIT COMMENT ACTIONS\nexport const editComment = (id, commentText) => ({\n  type: CONSTANTS.EDIT_COMMENT,\n  id,\n  commentText\n});\n\nexport const editCommentSuccess = (data) => ({\n  type: CONSTANTS.EDIT_COMMENT_SUCCESS,\n  data\n});\n\nexport const editCommentError = (error) => ({\n  type: CONSTANTS.EDIT_COMMENT_ERROR,\n  error\n});\n\n// FETCH COMMENT ACTIONS\nexport const fetchCommentSuccess = (results) => ({\n  type: CONSTANTS.FETCH_COMMENT_SUCCESS,\n  data: results\n});\n\nexport const fetchCommentError = (error) => ({\n  type: CONSTANTS.FETCH_COMMENT_ERROR,\n  error\n});\n\nexport const fetchCommentPending = () => ({\n  type: CONSTANTS.FETCH_COMMENT_PENDING,\n});\n\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Fab from '@material-ui/core/Fab';\nimport { styles } from './style';\nimport { addComment, editComment, editCommentMode } from '../container/actions';\nimport connect from \"react-redux/es/connect/connect\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport classNames from 'classnames';\n\nclass AddComment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      commentText: !this.props.isEdit ? '' : this.props.comment.text\n    };\n  }\n\n  onAddComment(parentId) {\n    if(!this.props.isEdit) {\n      this.props.addComment(this.state.commentText, parentId);\n      this.setState({\n        commentText: ''\n      });\n    } else {\n      this.props.editComment(this.props.comment.id, this.state.commentText);\n    }\n  };\n\n  handleCommentChange(e) {\n    this.setState({\n      commentText: e.target.value,\n    });\n  };\n\n  onCloseComment() {\n    this.setState({\n      commentText: this.props.comment.text,\n    });\n    this.props.editCommentMode(this.props.comment.id, false);\n  }\n\n  render() {\n    const { classes, isEdit, isAnswer, parentId, isLoading } = this.props;\n\n    if(isLoading) return null;\n\n    return (\n      <Card className={classNames(classes.root, isAnswer && classes.answerWrapper)}>\n        <CardContent className={classes.commentWrapper}>\n          <TextareaAutosize\n            className={classes.commentInput}\n            rows={1}\n            rowsMax={3}\n            aria-label=\"comment\"\n            placeholder=\"Add a comment\"\n            value={this.state.commentText}\n            onChange={(e) => this.handleCommentChange(e)}\n          />\n        </CardContent>\n        <div className={classes.commentBtns}>\n          <Fab\n            color=\"primary\"\n            size=\"small\"\n            aria-label=\"add\"\n            className={classes.commentAdd}\n            onClick={() => this.onAddComment(parentId)}\n          >\n            <AddIcon />\n          </Fab>\n          {isEdit && <Fab\n            color=\"secondary\"\n            size=\"small\"\n            aria-label=\"add\"\n            className={classNames(classes.commentAdd, classes.lastBtn)}\n            onClick={() => this.onCloseComment()}\n          >\n            <CloseIcon />\n          </Fab>}\n        </div>\n      </Card>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  addComment,\n  editComment,\n  editCommentMode\n};\n\nconst mapStateToProps = ({ comments: { isLoading }}) => ({\n  isLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddComment));\n","export const styles = () => ({\n  root: {\n    width: '100%',\n    margin: '10px 0 0'\n  },\n  commentWrapper: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  commentInput: {\n    resize: 'none',\n    fontSize: '0.875rem',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 400,\n    lineHeight: 1.43,\n    width: '100%',\n    padding: 5,\n    boxSizing: 'border-box'\n  },\n  commentBtns: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  commentAdd: {\n    margin: '0 16px 8px'\n  },\n  lastBtn: {\n    margin: '0 16px 8px 0'\n  },\n  answerWrapper: {\n    marginLeft: '30px',\n    width: 'auto'\n  }\n});\n","export const styles = () => ({\n  root: {\n    width: '100%',\n    margin: '10px 0 0'\n  },\n  commentWrapper: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  commentBtns: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  btns: {\n    margin: '0 8px 8px'\n  },\n  lastBtn: {\n    margin: '0 16px 8px 8px'\n  },\n  showComment: {\n    width: '100%'\n  },\n  answerWrapper: {\n    marginLeft: '30px',\n    width: 'auto'\n  }\n});\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Fab from \"@material-ui/core/Fab\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Card from \"@material-ui/core/Card\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from './style';\nimport { deleteComment, editCommentMode, addAnswerMode, toggleComment } from \"../container/actions\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass Comment extends Component {\n  onAddAnswerMode(id) {\n    this.props.addAnswerMode(id, true);\n  };\n\n  onEditCommentMode(id) {\n    this.props.editCommentMode(id, true);\n  };\n\n  onDeleteComment(id) {\n    this.props.deleteComment(id);\n  };\n\n  onToggleComment(id) {\n    this.props.toggleComment(id);\n  };\n\n  expandArrow() {\n    const { element, isOpen } = this.props;\n\n    return isOpen ?\n      <ExpandMoreIcon onClick={() => this.onToggleComment(element.id)} /> :\n      <ExpandLessIcon onClick={() => this.onToggleComment(element.id)} />\n  }\n\n  render() {\n    const { classes, element, isAnswer, showAnswer } = this.props;\n\n    return (\n      <Card className={classNames(classes.root, isAnswer && classes.answerWrapper)}>\n        <CardContent className={classes.commentWrapper}>\n          <Typography variant=\"body2\" component=\"p\" className={classes.showComment}>\n            {element.text}\n          </Typography>\n          {showAnswer && this.expandArrow()}\n        </CardContent>\n        <div className={classes.commentBtns}>\n          {!isAnswer && <Fab\n            color=\"primary\"\n            size=\"small\"\n            aria-label=\"add\"\n            className={classes.btns}\n            onClick={() => this.onAddAnswerMode(element.id)}\n          >\n            <AddIcon/>\n          </Fab>}\n          <Fab\n            color=\"secondary\"\n            aria-label=\"edit\"\n            size=\"small\"\n            className={classes.btns}\n            onClick={() => this.onEditCommentMode(element.id)}\n          >\n            <EditIcon/>\n          </Fab>\n          <Fab\n            size=\"small\"\n            aria-label=\"delete\"\n            className={classNames(classes.btns, classes.lastBtn)}\n            onClick={() => this.onDeleteComment(element.id)}\n          >\n            <DeleteIcon/>\n          </Fab>\n        </div>\n      </Card>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editCommentMode,\n  addAnswerMode,\n  toggleComment\n};\n\n\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(Comment));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport connect from \"react-redux/es/connect/connect\";\nimport { styles } from './style';\nimport AddComment from '../AddComment';\nimport Comment from \"./Comment\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst RenderComments = ({ comments, classes, isAnswer = false, isLoading }) => {\n  if(isLoading) {\n    return <Typography variant=\"body2\" component=\"p\">LOADING...</Typography>\n  }\n\n  return (\n    comments.map((item) => (\n        <div key={item.id} className={classes.root}>\n          {!item.isEdit ?\n            <Comment\n              element={item}\n              isAnswer={isAnswer}\n              showAnswer={item.comments && item.comments.length}\n              isOpen={item.isOpen}\n            /> :\n            <AddComment\n              isEdit={item.isEdit}\n              comment={item}\n              isAnswer={isAnswer}\n            />\n          }\n          {item.addAnswer && <AddComment parentId={item.id} isAnswer={true} />}\n          {(item.comments && item.comments.length && item.isOpen) ?\n            <RenderComments comments={item.comments} isAnswer={true} classes /> :\n            null\n          }\n        </div>\n      )\n    )\n  )\n};\n\nconst mapStateToProps = ({ comments: { comments, isLoading }}) => ({\n  comments: comments,\n  isLoading\n});\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(RenderComments));\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Post from './components/Post';\nimport AddComment from \"./components/Comment/AddComment\";\nimport RenderComments from \"./components/Comment/ShowComment\";\nimport { styles } from './style';\n\n\nconst App = ({ classes }) =>\n  <Grid\n    container\n    direction=\"column\"\n    justify=\"center\"\n    className={classes.root}\n  >\n    <Post />\n    <RenderComments />\n    <AddComment />\n  </Grid>\n\nexport default withStyles(styles)(App);\n","export const styles = () => ({\n  root: {\n    maxWidth: 615,\n    margin: '0 auto'\n  }\n});\n","import * as CONSTANTS from './constants';\nimport uuid from 'uuid/v4';\n\nconst initialState = {\n  comments: [],\n  isLoading: false\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case CONSTANTS.FETCH_COMMENT_SUCCESS:\n      return {\n        ...state,\n        comments: action.data,\n        isLoading: false\n      };\n    case CONSTANTS.FETCH_COMMENT_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        isLoading: false\n      };\n    case CONSTANTS.FETCH_COMMENT_PENDING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case CONSTANTS.TOGGLE_COMMENTS:\n      return {\n        ...state,\n        comments: state.comments.map((item) => (\n            (item.id === action.id) ?\n              {\n                ...item,\n                isOpen: !item.isOpen,\n              } : item\n          )\n        )\n      };\n    case CONSTANTS.ADD_ANSWER_MODE:\n      return {\n        ...state,\n        comments: state.comments.map((item) => (\n          (item.id === action.id) ?\n            {\n              ...item,\n              addAnswer: action.mode,\n            } : item\n          )\n        )\n      };\n    case CONSTANTS.ADD_COMMENT:\n      return {\n        ...state,\n        comments: (!action.parentId) ?\n          [...state.comments, {id: uuid(), text: action.comment}]:\n          state.comments.map((item) => (\n            (item.id === action.parentId) ?\n              item.comments ?\n                {\n                  ...item,\n                  comments: [...item.comments, {id: uuid(), text: action.comment}],\n                } :\n                {\n                  ...item,\n                  comments: [{id: uuid(), text: action.comment}],\n                }\n              : item\n            )\n          )\n      };\n    case CONSTANTS.DELETE_COMMENT_SUCCESS:\n      return {\n        ...state,\n        comments: action.data\n      };\n    case CONSTANTS.DELETE_COMMENT_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    case CONSTANTS.EDIT_COMMENT_SUCCESS:\n      return {\n        ...state,\n        comments: action.data\n      };\n    case CONSTANTS.EDIT_COMMENT_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    case CONSTANTS.EDIT_COMMENT_MODE_SUCCESS:\n      return {\n        ...state,\n        comments: action.data\n      };\n    case CONSTANTS.EDIT_COMMENT_MODE_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport commentReducer from '../components/Comment/container/reducer';\n\nexport default combineReducers({\n  comments: commentReducer,\n});\n","import { select, takeEvery, put, call } from 'redux-saga/effects';\nimport * as CONSTANTS from './constants';\nimport * as actions from './actions';\nimport defaultComment from '../assets/comments';\n\nexport function* watchCommentsSaga() {\n  yield fetchComments();\n  yield takeEvery(CONSTANTS.EDIT_COMMENT_MODE, changeCommentsModeAsync);\n  yield takeEvery(CONSTANTS.EDIT_COMMENT, changeCommentsAsync);\n  yield takeEvery(CONSTANTS.DELETE_COMMENT, deleteCommentsAsync);\n}\n\nfunction fakeAPICall() {\n  return new Promise((resolve, reject) => {\n    let wait = setTimeout(() => {\n      clearTimeout(wait);\n      resolve(defaultComment);\n      reject(new Error('Time out'));\n    }, 500)\n  })\n}\n\nfunction* fetchComments() {\n  try {\n    yield put(actions.fetchCommentPending());\n\n    const results = yield call(fakeAPICall);\n    yield put(actions.fetchCommentSuccess(results));\n  } catch(error) {\n    yield put(actions.fetchCommentError(error));\n  }\n}\n\nfunction changeComments(comments, action) {\n  return comments.map((item) => {\n    if (item.id === action.id) {\n      return {\n        ...item,\n        text: action.commentText,\n        isEdit: false,\n      }\n    } else if (item.comments) {\n      return {\n        ...item,\n        comments: changeComments(item.comments, action)\n      };\n    }\n\n    return item;\n  });\n}\n\n\nfunction changeCommentsMode(comments, action) {\n  return comments.map((item) => {\n    if (item.id === action.id) {\n      return {\n        ...item,\n        isEdit: action.mode,\n      }\n    } else if (item.comments) {\n      return {\n        ...item,\n        comments: changeCommentsMode(item.comments, action)\n      };\n    }\n\n    return item;\n  });\n}\n\nfunction deleteComments(comments, action) {\n  return comments.reduce((res, comment) => {\n    if(comment.id === action.id) {\n      return res;\n    } else if (comment.comments) {\n      return [...res, {...comment, comments:  deleteComments(comment.comments, action)}];\n    }\n    return [...res, comment];\n  }, []);\n}\n\nfunction* changeCommentsModeAsync(action) {\n  try {\n    const state = yield select();\n    const newComments = changeCommentsMode(state.comments.comments, action);\n\n    yield put(actions.editCommentModeSuccess(newComments));\n\n  } catch (error) {\n    yield put(actions.editCommentModeError(error));\n  }\n}\n\n\nfunction* changeCommentsAsync(action) {\n  try {\n    const state = yield select();\n    const newComments = changeComments(state.comments.comments, action);\n\n    yield put(actions.editCommentSuccess(newComments));\n\n  } catch (error) {\n    yield put(actions.editCommentError(error));\n  }\n}\n\nfunction* deleteCommentsAsync(action) {\n  try {\n    const state = yield select();\n    const newComments = deleteComments(state.comments.comments, action);\n\n    yield put(actions.deleteCommentSuccess(newComments));\n\n  } catch (error) {\n    yield put(actions.deleteCommentError(error));\n  }\n}\n","import { all } from 'redux-saga/effects';\nimport { watchCommentsSaga } from '../components/Comment/container/sagas';\n\nexport default function* rootSaga() {\n  yield all([\n    watchCommentsSaga(),\n  ])\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './redux/configureStore';\nimport rootSaga from './redux/sagas';\n\nconst store = configureStore();\nstore.runSaga(rootSaga);\n\nrender (\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  return {\n    ...createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware))),\n    runSaga: sagaMiddleware.run,\n  }\n}\n"],"sourceRoot":""}